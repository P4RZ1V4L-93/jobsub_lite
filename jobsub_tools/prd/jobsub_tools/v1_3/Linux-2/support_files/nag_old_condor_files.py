#!/usr/bin/env python
#originally run as minervaana on if01
#
import os
import string
import sys
import readline
import commands
import smtplib
import pprint

from email.MIMEText import MIMEText


def search_dir_send_mail(root_dir, user):

    _debug_ = False
    (retVal,host)=commands.getstatusoutput("uname -n")
    to_addr=user+"@fnal.gov"
    if user == "novadata" or user == "novapro" or user == "novasoft":
	to_addr = "janow@fnal.gov"
    #from_addr="dbox@fnal.gov"
    from_addr="fermigrid-help@fnal.gov"
    search_dir = root_dir + "/" + user
    cmd = "find %s -type f  -mtime +30 -ls" % search_dir
    (retVal,rslt)=commands.getstatusoutput(cmd)
    baz=rslt.split("\n") 
    nfiles=len(baz)
    pp = pprint.PrettyPrinter(indent=4)
    (retVal,whoami)=commands.getstatusoutput("whoami")

    if (len(rslt)>0):
	print "send mail to %s about %s " % (to_addr,search_dir)
	msg_text = """ 
This is an automated message generated by %s@%s. 
Please send any questions or replies to %s .  

You have %d files in directory
%s that are more than 30 days old.  

These files are generated when you submit jobs to the condor batch system
and tend to accumulate to the point that unix commands like 
ls and rm no longer work, and can eventually use up your disk quota.
YOUR GRID SUBMISSION WILL GET VERY SLOW if you let enough of these files
accumulate.

To remove these files, execute the following command from a unix prompt:
find %s -type f -mtime +30 -exec rm -f {} \;

partial file listing:
%s
....
%s
              """ % ( whoami,host,from_addr,nfiles,search_dir, search_dir, pp.pformat(baz[0:5]),pp.pformat(baz[nfiles-5:nfiles]))
	if user=="minervadat" or user=="minervapro":
		to_addr="ljf26@fnal.gov"

	msg= MIMEText(msg_text)
    	msg['Subject']="you have %d files in %s over 30 days old " % (nfiles,search_dir)
    	msg['From']=from_addr
    	msg['To']=to_addr
    	s = smtplib.SMTP()
    	s.connect()
    	s.sendmail(from_addr,to_addr,msg.as_string())
    	s.close()


def list_condor_tmp_dirs(root_dir):
	cmd = "ls %s "% root_dir
    	(retVal,rslt)=commands.getstatusoutput(cmd)
   	users = rslt.split()
	for user in users:
		cmd2 = "/usr/bin/getent passwd %s" % user
		(retVal,rslt2)=commands.getstatusoutput(cmd2)
		if retVal == 0:
			print "doing user %s" %user 
			search_dir_send_mail(root_dir, user)


if __name__ == '__main__':
    for arg in sys.argv:        
	if(arg != sys.argv[0]):
        	#search_dir_send_mail(arg)
		list_condor_tmp_dirs(arg)

