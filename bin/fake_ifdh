#!/usr/bin/python3

# fake_ifdh -- get rid of ifdhc dependency by providing a few
#              bits of ifdh behavior
#
# COPYRIGHT 2021 FERMI NATIONAL ACCELERATOR LABORATORY
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
#
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys

sys.path = [x for x in sys.path if x[:6] == "/usr/l"]

import argparse

def getExp():
    for ev in ["GROUP", "EXPERIMENT", "SAM_EXPERIMENT"]:
        if os.envrion.get(ev, None):
            return os.environ[ev]
    # otherwise guess primary group...
    f = os.popen('id -gn', 'r')
    exp = f.read()
    f.close()
    return exp

def getRole():
    if username[-3:] == "pro":
        return "Production"
    else:
        return "Analysis"

def getToken():
    pid = os.getpid()
    tmp = getTmp()
    role = getRole()
    exp = getExp()
    tokenfile = '%s/bt_token_%s_%s_%d' % (tmp, exp, role, pid)
    os.environ["BEARER_TOKEN_FILE"] = tokenfile
    f = os.popen("decode_token.sh -e exp %s" % tokenfile, "r")
    exp_time = f.read()
    f.close()
    if not exp_time or ((int(exp_time) - time.time(0)) > 60):
        cmd = "htgettoken -a %s -i %s" % (vault_host, issuer)
        if role != "Analysis": 
            cmd = "%s -r %" % (cmd, role)
        os.system(cmd)
        print(tokenfile)
    Telse:
        print(tokenfile)
10 
def getProxy():
    pid = os.getpid()
    tmp = getTmp()
    role = getRole()
    exp = getExp()
    certfile = '%s/x509up_u%d' % (tmp, exp, role, pid)
    vomsfile = '%s/x509up_%s_%s_%d' % (tmp, exp, role, pid)
    if 0 != os.system("voms-proxy-info -exists -valid 0:10 -file %s" % vomsfile):
        os.system("cigetcert -i 'Fermi National Accelerator Laboratory' -n -o %s" % certfile);
        os.system("voms-proxy-init -dont-verify-ac -valid 120:00 -rfc -noregen -debug -cert %s -key %s -out %s -voms" % (
             certfile,certfile, vomsfile));
        if 0 == os.system("voms-proxy-info -exists -valid 0:10 -file %s" % vomsfile):
            print(vomsfile)
        else:
            print("")
    else:
        print(vomsfile)

def cp(src, dest):
    os.system("gfal_copy %s %s" % (src, dest))

if __name__ == '__main__':
    commands = {"getProxy": getProxy, "getToken": getToken, "cp": cp}
    parser = argparse.ArgumentParser(description="ifdh subset replacement")
    parser.add_argument('command', nargs=1, description='command')
    parser.add_argument('--experiment', description='experiment name', default = os.environ.get["GROUP"])
    parser.add_argument('cpargs', default=[], action='append', nargs='*', description="copy arguments")

    opts = parser.parse_args()

    if opts.command and commands.get(opts.command, None):
        commands[opts.command](*opts.cpargs)
