#!/usr/bin/python3 -I
import argparse
import os
import os.path
import sys

if os.environ.get("LD_LIBRARY_PATH", ""):
    os.environ["HIDE_LD_LIBRARY_PATH"] = os.environ["LD_LIBRARY_PATH"]
    del os.environ["LD_LIBRARY_PATH"]
    os.execv(sys.argv[0], sys.argv)

PREFIX = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.append(os.path.join(PREFIX, "lib"))

# pylint: disable=wrong-import-position, ungrouped-imports
from jobsub_api import (
    jobsub_submit_args,
    jobsub_cmd_args,
    jobsub_fetchlog_args,
    jobsub_cmd_parser,
    jobsub_fetchlog_parser,
)

from get_parser import (
    get_parser,
    get_condor_epilog,
)


VERBOSE = 0

if __name__ == "__main__":
    try:
        top_parser = argparse.ArgumentParser()
        subparsers = top_parser.add_subparsers()
        for sc in ("submit", "submit_dag"):
            sub_parser = get_parser(parser=subparsers.add_parser(sc))
            sub_parser.set_defaults(command=f"jobsub_{sc}")
            sub_parser.set_defaults(func=jobsub_submit_args)

        for sc in ("q", "hold", "release", "rm", "wait"):
            sub_parser = jobsub_cmd_parser(
                sc == "q",
                parser=subparsers.add_parser(
                    sc,
                    formatter_class=argparse.RawDescriptionHelpFormatter,
                    epilog=get_condor_epilog(f"condor_{sc}"),
                ),
            )
            sub_parser.set_defaults(command=f"jobsub_{sc}")
            sub_parser.set_defaults(func=jobsub_cmd_args)
        sub_parser = jobsub_fetchlog_parser(parser=subparsers.add_parser("fetchlog"))
        sub_parser.set_defaults(command="jobsub_fetchlog")
        sub_parser.set_defaults(func=jobsub_fetchlog_args)

        args, passthru = top_parser.parse_known_args()
        args.func(args, passthru)

    except Exception as e:  # pylint: disable=broad-except
        # if VERBOSE:
        # pylint: disable=using-constant-test
        if True:
            raise
        sys.stderr.write(f"\n\nError: {e.__class__.__name__}: {str(e)}\n\n")
        sys.exit(1)
